{"version":3,"sources":["features/userSlice.js","InputOption.js","Post.js","firebase.js","Feed.js","HeaderOption.js","Header.js","Sidebar.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","InputOption","Icon","title","color","className","style","Post","forwardRef","ref","description","message","photoUrl","Avatar","src","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","ImageIcon","YouTubeIcon","EventNoteIcon","VerticalSplitIcon","HeaderOption","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterOutlinedIcon","SmsIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","catch","error","alert","createUserWithEmailAndPassword","updateProfile","photoURL","Widgets","newArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9de3d066.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\nexport default userSlice.reducer;\n","import React from \"react\";\nimport \"./InputOption.css\";\n\nfunction InputOption({ Icon, title, color }) {\n  return (\n    <div className=\"inputOption\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default InputOption;\n","import React, { forwardRef } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Post.css\";\nimport InputOption from \"./InputOption\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n  return (\n    <div ref={ref} className=\"post\">\n      <div className=\"post__header\">\n        <Avatar src={photoUrl}>{name[0]}</Avatar>\n        <div className=\"post__info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n        </div>\n      </div>\n\n      <div className=\"post__body\">\n        <p>{message}</p>\n      </div>\n\n      <div className=\"post__buttons\">\n        <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n        <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n        <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n        <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n      </div>\n    </div>\n  );\n});\n\nexport default Post;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOqh8IfkShzlWF0UnMy-TxA9RQ5HOJ5qk\",\n  authDomain: \"linkedin-clone-b9b96.firebaseapp.com\",\n  projectId: \"linkedin-clone-b9b96\",\n  storageBucket: \"linkedin-clone-b9b96.appspot.com\",\n  messagingSenderId: \"1032601657204\",\n  appId: \"1:1032601657204:web:cf60612621ebae69ad9621\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { useState, useEffect } from \"react\";\nimport \"./Feed.css\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InputOption from \"./InputOption\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport Post from \"./Post\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n// リスト並び替えのアニメーション\nimport FlipMove from \"react-flip-move\";\n\nfunction Feed() {\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  // firebaseのデータベースと連携\n  useEffect(() => {\n    db.collection(\"posts\")\n      // 時間の降順で並べ替え　上順なら\"asc\"\"\n      .orderBy(\"timestamp\", \"desc\")\n      // リアルタイムアップデートをリッスンする\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const sendPosts = (e) => {\n    e.preventDefault();\n    //  firebaseのデータベースに保存\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__inputContainer\">\n        <div className=\"feed__input\">\n          <CreateIcon />\n          <form>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n            ></input>\n            <button onClick={sendPosts} type=\"submit\">\n              Send\n            </button>\n          </form>\n        </div>\n\n        <div className=\"feed__inputOptions\">\n          <InputOption Icon={ImageIcon} title=\"写真\" color=\"#70b5f9\" />\n          <InputOption Icon={YouTubeIcon} title=\"動画\" color=\"#7fc15e\" />\n          <InputOption Icon={EventNoteIcon} title=\"イベント\" color=\"#e7a33e\" />\n          <InputOption\n            Icon={VerticalSplitIcon}\n            title=\"ブログを書く\"\n            color=\"#fc9295\"\n          />\n        </div>\n      </div>\n\n      <FlipMove>\n        {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n          <Post\n            key={id}\n            name={name}\n            description={description}\n            message={message}\n            photoUrl={photoUrl}\n          />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React from \"react\";\nimport \"./HeaderOption.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { selectUser } from \"./features/userSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n  const user = useSelector(selectUser);\n\n  return (\n    <div onClick={onClick} className=\"headerOption\">\n      {Icon && <Icon className=\"headerOption__icon\" />}\n      {avatar && (\n        <Avatar className=\"headerOption__icon\">{user?.email[0]}</Avatar>\n      )}\n      <h3 className=\"headerOption__title\">{title}</h3>\n    </div>\n  );\n}\n\nexport default HeaderOption;\n","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HeaderOption from \"./HeaderOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenterOutlinedIcon from \"@material-ui/icons/BusinessCenterOutlined\";\nimport SmsIcon from \"@material-ui/icons/Sms\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth } from \"./firebase\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const logoutOfApp = () => {\n    dispatch(logout());\n    auth.signOut();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\n          alt=\"icon\"\n        ></img>\n\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input placeholder=\"Search\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"header__right\">\n        <HeaderOption Icon={HomeIcon} title=\"ホーム\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"つながり\" />\n        <HeaderOption Icon={BusinessCenterOutlinedIcon} title=\"求人\" />\n        <HeaderOption Icon={SmsIcon} title=\"メッセージ\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"お知らせ\" />\n        <HeaderOption\n          avatar={true}\n          title=\"プロフィール\"\n          onClick={logoutOfApp}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Sidebar.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n  const recentItem = (topic) => (\n    <div className=\"sidebar__recentItem\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-top\">\n        <img\n          src=\"https://images.unsplash.com/photo-1500042600524-37ecb686c775?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\"\n          alt=\"sidebar_top image\"\n        />\n        <Avatar src={user.photoUrl} className=\"sidebar__avatar\">\n          {user.email[0]}\n        </Avatar>\n        <h2>{user.displayName}</h2>\n        <h4>{user.email}</h4>\n      </div>\n\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Who viewed you</p>\n          <p className=\"sidebar__statNumber\">1.542</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>Views on post</p>\n          <p className=\"sidebar__statNumber\">2.235</p>\n        </div>\n      </div>\n\n      <div className=\"sidebar-bottom\">\n        <p>Recent</p>\n        {recentItem(\"React.js\")}\n        {recentItem(\"プログラミング\")}\n        {recentItem(\"エンジニア\")}\n        {recentItem(\"デザイナー\")}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useState } from \"react\";\nimport { login } from \"./features/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"./firebase\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // ログインイベント\n  const loginToApp = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        dispatch(\n          login({\n            email: userAuth.user.email,\n            uid: userAuth.user.uid,\n            displayName: userAuth.user.displayName,\n            profileUrl: userAuth.user.photoUrl,\n          })\n        );\n      })\n      .catch((error) => alert(error));\n  };\n\n  // 新規ユーザー登録;\n  const register = () => {\n    if (!name) {\n      return alert(\"Please enter a full name\");\n    }\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilePic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoUrl: profilePic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://genylabs.io/wp-content/uploads/2019/10/Social-Listening-to-LinkedIn.png\"\n        alt=\"Linked in\"\n      />\n      <form>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full name\"\n          type=\"text\"\n        />\n\n        <input\n          value={profilePic}\n          onChange={(e) => setProfilePic(e.target.value)}\n          placeholder=\"Profile pic url\"\n          type=\"text\"\n        />\n\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          type=\"email\"\n        />\n\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          type=\"password\"\n        />\n\n        <button type=\"submit\" onClick={loginToApp}>\n          ログイン\n        </button>\n      </form>\n      　\n      <p>\n        初めてご利用ですか?\n        <span className=\"login__register\" onClick={register}>\n          ユーザー登録\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./Widgets.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nfunction Widgets() {\n  const newArticle = (heading, subtitle) => (\n    <div className=\"widgets__article\">\n      <div className=\"widgets__articleLeft\">\n        <FiberManualRecordIcon />\n      </div>\n      <div className=\"widgets__articleRight\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets__header\">\n        <h2>LinkedIn News</h2>\n        <InfoIcon />\n      </div>\n\n      {newArticle(\"JavaScript\", \"おすすめのプログラミング言語\")}\n      {newArticle(\"React\", \"JSのライブラリ\")}\n      {newArticle(\"Next.js\", \"Reactのライブラリ\")}\n      {newArticle(\"Vue\", \"JSのフレームワーク\")}\n      {newArticle(\"Nuxt.js\", \"Vueのライブラリ\")}\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport Feed from \"./Feed\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Widgets from \"./Widgets\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //user is logged in\n        dispatch(\n          login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoUrl,\n          })\n        );\n      } else {\n        //user is logged out\n        dispatch(logout());\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Sidebar />\n          <Feed />\n          <Widgets />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}